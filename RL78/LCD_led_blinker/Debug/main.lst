   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.global	_task1
  29                             	_task1:
  30                             	.LFB0:
  31                             		.file 1 "../src/main.c"
   1:../src/main.c **** /***************************************************************/
   2:../src/main.c **** /*                                                             */
   3:../src/main.c **** /*      PROJECT NAME :  ULWOS testing                          */
   4:../src/main.c **** /*      FILE         :  main.c                                 */
   5:../src/main.c **** /*      DESCRIPTION  :  Main Program                           */
   6:../src/main.c **** /*      CPU SERIES   :  RL78 - G13                             */
   7:../src/main.c **** /*      CPU TYPE     :  R5F100LE                               */
   8:../src/main.c **** /*                                                             */
   9:../src/main.c **** /*      This file is generated by e2 studio.                   */
  10:../src/main.c **** /*                                                             */
  11:../src/main.c **** /***************************************************************/                                  
  12:../src/main.c ****                                                                                             
  13:../src/main.c ****                                                                                             
  14:../src/main.c **** /************************************************************************/
  15:../src/main.c **** /*    File Version: V1.00                                               */
  16:../src/main.c **** /*    Date Generated: 02/26/2016                                        */
  17:../src/main.c **** /************************************************************************/
  18:../src/main.c **** 
  19:../src/main.c **** #include "iodefine.h"
  20:../src/main.c **** #include "iodefine_ext.h"
  21:../src/main.c **** #include "myrl78.h"
  22:../src/main.c **** #include "interrupt_handlers.h"
  23:../src/main.c **** #include "ulwos.h"
  24:../src/main.c **** #include "lcd_8x2.h"
  25:../src/main.c **** 
  26:../src/main.c **** #define LED 	P6_bit.no3
  27:../src/main.c **** #define LED_DIR PM6_bit.no3
  28:../src/main.c **** 
  29:../src/main.c **** volatile unsigned long counter;
  30:../src/main.c **** 
  31:../src/main.c **** void task1(void){
  32                             		.loc 1 31 0
  33                             		; start of function
  34                             		; push 4: r16 r18
  35                             		; locals: 36 bytes
  36 0000 61 EF                   		sel	rb2
  37 0002 C1                      		push	ax ; r16
  38                             	.LCFI0:
  39 0003 C3                      		push	bc ; r18
  40                             	.LCFI1:
  41 0004 61 CF                   		sel	rb0
  42 0006 20 24                   		subw	sp, #36
  43                             	.LCFI2:
  32:../src/main.c **** 	volatile unsigned long count;
  33:../src/main.c **** 	LED_DIR = 0;
  44                             		.loc 1 33 0
  45 0008 71 38 26 FF             		clr1	!-218.3
  46                             	.L6:
  34:../src/main.c **** 	while (1){
  35:../src/main.c **** 		LED = 0;
  47                             		.loc 1 35 0
  48 000c 71 38 06 FF             		clr1	!-250.3
  36:../src/main.c **** 		for (count=0; count<100000;count++) counter=count;
  49                             		.loc 1 36 0
  50 0010 F6                      		clrw	ax
  51 0011 B8 20                   		movw	[sp+32], ax
  52 0013 F6                      		clrw	ax
  53 0014 B8 22                   		movw	[sp+34], ax
  54 0016 A8 20                   		movw	ax, [sp+32]
  55 0018 B8 0C                   		movw	[sp+12], ax
  56 001a A8 22                   		movw	ax, [sp+34]
  57 001c B8 0E                   		movw	[sp+14], ax
  58 001e A8 0E                   		movw	ax, [sp+14]
  59 0020 44 01 00                		 cmpw	ax, #1
  60 0023 A8 0C                   		 movw	ax, [sp+12]
  61 0025 61 F8                   		 sknz
  62 0027 44 9F 86                		 cmpw	ax, #34463
  63 002a 61 F3                   		 sknh
  64 002c EC 7A 00 00             		 br	!!.L5
  65                             	.L8:
  66                             		.loc 1 36 0 is_stmt 0 discriminator 3
  67 0030 A8 20                   		movw	ax, [sp+32]
  68 0032 BD F0                   		movw	r8, ax
  69 0034 A8 22                   		movw	ax, [sp+34]
  70 0036 BD F2                   		movw	r10, ax
  71 0038 AD F0                   		movw	ax, r8
  72 003a BF 00 00                		movw	!_counter, ax
  73 003d AD F2                   		movw	ax, r10
  74 003f BF 00 00                		movw	!_counter+2, ax
  75 0042 A8 20                   		movw	ax, [sp+32]
  76 0044 BD F4                   		movw	r12, ax
  77 0046 A8 22                   		movw	ax, [sp+34]
  78 0048 BD F6                   		movw	r14, ax
  79 004a AD F4                   		movw ax, r12
  80 004c 04 01 00                		addw ax, #1
  81 004f BD E8                   		movw r16, ax
  82 0051 AD F6                   		movw ax, r14
  83 0053 61 D8                   		sknc
  84 0055 A1                      		incw ax
  85 0056 BD EA                   		movw r18,ax
  86 0058 AD E8                   		movw	ax, r16
  87 005a B8 20                   		movw	[sp+32], ax
  88 005c AD EA                   		movw	ax, r18
  89 005e B8 22                   		movw	[sp+34], ax
  90 0060 A8 20                   		movw	ax, [sp+32]
  91 0062 B8 00                   		movw	[sp], ax
  92 0064 A8 22                   		movw	ax, [sp+34]
  93 0066 B8 02                   		movw	[sp+2], ax
  94 0068 A8 02                   		movw	ax, [sp+2]
  95 006a 44 01 00                		 cmpw	ax, #1
  96 006d A8 00                   		 movw	ax, [sp]
  97 006f 61 F8                   		 sknz
  98 0071 44 9F 86                		 cmpw	ax, #34463
  99 0074 61 E3                   		 skh
 100 0076 EC 30 00 00             		 br	!!.L8
 101                             	.L5:
  37:../src/main.c **** 		LED = 1;
 102                             		.loc 1 37 0 is_stmt 1
 103 007a 71 30 06 FF             		set1	!-250.3
  38:../src/main.c **** 		for (count=0; count<100000;count++) counter=count;
 104                             		.loc 1 38 0
 105 007e F6                      		clrw	ax
 106 007f B8 20                   		movw	[sp+32], ax
 107 0081 F6                      		clrw	ax
 108 0082 B8 22                   		movw	[sp+34], ax
 109 0084 A8 20                   		movw	ax, [sp+32]
 110 0086 B8 08                   		movw	[sp+8], ax
 111 0088 A8 22                   		movw	ax, [sp+34]
 112 008a B8 0A                   		movw	[sp+10], ax
 113 008c A8 0A                   		movw	ax, [sp+10]
 114 008e 44 01 00                		 cmpw	ax, #1
 115 0091 A8 08                   		 movw	ax, [sp+8]
 116 0093 61 F8                   		 sknz
 117 0095 44 9F 86                		 cmpw	ax, #34463
 118 0098 61 F3                   		 sknh
 119 009a EC 0C 00 00             		 br	!!.L6
 120 009e AD F0                   		movw	ax, r8
 121 00a0 B8 18                   		movw	[sp+24], ax
 122 00a2 AD F2                   		movw	ax, r10
 123 00a4 B8 1A                   		movw	[sp+26], ax
 124 00a6 AD F4                   		movw	ax, r12
 125 00a8 B8 1C                   		movw	[sp+28], ax
 126 00aa AD F6                   		movw	ax, r14
 127 00ac B8 1E                   		movw	[sp+30], ax
 128                             	.L7:
 129                             		.loc 1 38 0 is_stmt 0 discriminator 3
 130 00ae A8 20                   		movw	ax, [sp+32]
 131 00b0 BD F0                   		movw	r8, ax
 132 00b2 A8 22                   		movw	ax, [sp+34]
 133 00b4 BD F2                   		movw	r10, ax
 134 00b6 AD F0                   		movw	ax, r8
 135 00b8 BF 00 00                		movw	!_counter, ax
 136 00bb AD F2                   		movw	ax, r10
 137 00bd BF 00 00                		movw	!_counter+2, ax
 138 00c0 A8 20                   		movw	ax, [sp+32]
 139 00c2 BD F4                   		movw	r12, ax
 140 00c4 A8 22                   		movw	ax, [sp+34]
 141 00c6 BD F6                   		movw	r14, ax
 142 00c8 AD F4                   		movw ax, r12
 143 00ca 04 01 00                		addw ax, #1
 144 00cd BD E8                   		movw r16, ax
 145 00cf AD F6                   		movw ax, r14
 146 00d1 61 D8                   		sknc
 147 00d3 A1                      		incw ax
 148 00d4 BD EA                   		movw r18,ax
 149 00d6 AD E8                   		movw	ax, r16
 150 00d8 B8 20                   		movw	[sp+32], ax
 151 00da AD EA                   		movw	ax, r18
 152 00dc B8 22                   		movw	[sp+34], ax
 153 00de A8 20                   		movw	ax, [sp+32]
 154 00e0 B8 04                   		movw	[sp+4], ax
 155 00e2 A8 22                   		movw	ax, [sp+34]
 156 00e4 B8 06                   		movw	[sp+6], ax
 157 00e6 A8 06                   		movw	ax, [sp+6]
 158 00e8 44 01 00                		 cmpw	ax, #1
 159 00eb A8 04                   		 movw	ax, [sp+4]
 160 00ed 61 F8                   		 sknz
 161 00ef 44 9F 86                		 cmpw	ax, #34463
 162 00f2 61 E3                   		 skh
 163 00f4 EC AE 00 00             		 br	!!.L7
 164 00f8 AD F0                   		movw	ax, r8
 165 00fa B8 10                   		movw	[sp+16], ax
 166 00fc AD F2                   		movw	ax, r10
 167 00fe B8 12                   		movw	[sp+18], ax
 168 0100 AD F4                   		movw	ax, r12
 169 0102 B8 14                   		movw	[sp+20], ax
 170 0104 AD F6                   		movw	ax, r14
 171 0106 B8 16                   		movw	[sp+22], ax
 172 0108 A8 18                   		movw	ax, [sp+24]
 173 010a BD F0                   		movw	r8, ax
 174 010c A8 1A                   		movw	ax, [sp+26]
 175 010e BD F2                   		movw	r10, ax
 176 0110 A8 1C                   		movw	ax, [sp+28]
 177 0112 BD F4                   		movw	r12, ax
 178 0114 A8 1E                   		movw	ax, [sp+30]
 179 0116 BD F6                   		movw	r14, ax
 180 0118 EC 0C 00 00             		br	!!.L6
 181                             	.LFE0:
 183                             		.section	.rodata
 184                             	.LC0:
 185 0000 54 65 73 74 69 6E 67 00 		.string	"Testing"
 186                             	.text
 187                             		.global	_task2
 189                             	_task2:
 190                             	.LFB1:
  39:../src/main.c **** 	}
  40:../src/main.c **** }
  41:../src/main.c **** 
  42:../src/main.c **** void task2(void){
 191                             		.loc 1 42 0 is_stmt 1
 192                             		; start of function
 193                             		; push 4: r16 r18
 194                             		; locals: 14 bytes
 195                             		; outgoing: 4 bytes
 196 011c 61 EF                   		sel	rb2
 197 011e C1                      		push	ax ; r16
 198                             	.LCFI3:
 199 011f C3                      		push	bc ; r18
 200                             	.LCFI4:
 201 0120 61 CF                   		sel	rb0
 202 0122 20 12                   		subw	sp, #18
 203                             	.LCFI5:
  43:../src/main.c **** 	volatile unsigned char aux;
  44:../src/main.c **** 	volatile unsigned long temp;
  45:../src/main.c **** 	LCD_init(DISPLAY_8x5|_2LINES,DISPLAY_ON|CURSOR_OFF|CURSOR_FIXED);
 204                             		.loc 1 45 0
 205 0124 51 08                   		mov	a, #8
 206 0126 98 00                   		mov	[sp], a
 207 0128 51 04                   		mov	a, #4
 208 012a 98 02                   		mov	[sp+2], a
 209 012c 8D F0                   		mov	a, r8
 210 012e 98 07                   		mov	[sp+7], a
 211 0130 8D F1                   		mov	a, r9
 212 0132 98 06                   		mov	[sp+6], a
 213 0134 8D F2                   		mov	a, r10
 214 0136 98 05                   		mov	[sp+5], a
 215 0138 8D F3                   		mov	a, r11
 216 013a 98 04                   		mov	[sp+4], a
 217 013c FC 00 00 00             		call	!!%code(_LCD_init)
 218                             	.LVL0:
 219 0140 88 07                   		mov	a, [sp+7]
 220 0142 9D F0                   		mov	r8, a
 221 0144 88 06                   		mov	a, [sp+6]
 222 0146 9D F1                   		mov	r9, a
 223 0148 88 05                   		mov	a, [sp+5]
 224 014a 9D F2                   		mov	r10, a
 225 014c 88 04                   		mov	a, [sp+4]
 226 014e 9D F3                   		mov	r11, a
 227                             	.L16:
  46:../src/main.c **** 	while (1){
  47:../src/main.c **** 		LCD_write_char('\f');   // apaga o display
 228                             		.loc 1 47 0
 229 0150 51 0C                   		mov	a, #12
 230 0152 98 00                   		mov	[sp], a
 231 0154 8D F0                   		mov	a, r8
 232 0156 98 07                   		mov	[sp+7], a
 233 0158 8D F1                   		mov	a, r9
 234 015a 98 06                   		mov	[sp+6], a
 235 015c 8D F2                   		mov	a, r10
 236 015e 98 05                   		mov	[sp+5], a
 237 0160 8D F3                   		mov	a, r11
 238 0162 98 04                   		mov	[sp+4], a
 239 0164 FC 00 00 00             		call	!!%code(_LCD_write_char)
 240                             	.LVL1:
  48:../src/main.c **** 		LCD_pos_xy(0,0);
 241                             		.loc 1 48 0
 242 0168 F1                      		clrb	a
 243 0169 98 00                   		mov	[sp], a
 244 016b F1                      		clrb	a
 245 016c 98 02                   		mov	[sp+2], a
 246 016e FC 00 00 00             		call	!!%code(_LCD_pos_xy)
 247                             	.LVL2:
  49:../src/main.c **** 		LCD_write_string("Testing");
 248                             		.loc 1 49 0
 249 0172 30 00 00                		movw	ax, #.LC0
 250 0175 B8 00                   		movw	[sp], ax
 251 0177 FC 00 00 00             		call	!!%code(_LCD_write_string)
 252                             	.LVL3:
  50:../src/main.c **** 		for (aux=0;aux<100;aux++){
 253                             		.loc 1 50 0
 254 017b F1                      		clrb	a
 255 017c 98 0D                   		mov	[sp+13], a
 256 017e 88 07                   		mov	a, [sp+7]
 257 0180 9D F0                   		mov	r8, a
 258 0182 88 06                   		mov	a, [sp+6]
 259 0184 9D F1                   		mov	r9, a
 260 0186 88 05                   		mov	a, [sp+5]
 261 0188 9D F2                   		mov	r10, a
 262 018a 88 04                   		mov	a, [sp+4]
 263 018c 9D F3                   		mov	r11, a
 264 018e 88 0D                   		mov	a, [sp+13]
 265 0190 4C 63                   		cmp	a, #99
 266 0192 61 F3                   		 sknh
 267 0194 EC 50 01 00             		 br	!!.L16
 268                             	.L20:
  51:../src/main.c **** 			LCD_pos_xy(0,1);
 269                             		.loc 1 51 0
 270 0198 F1                      		clrb	a
 271 0199 98 00                   		mov	[sp], a
 272 019b E1                      		oneb	a
 273 019c 98 02                   		mov	[sp+2], a
 274 019e 8D F0                   		mov	a, r8
 275 01a0 98 07                   		mov	[sp+7], a
 276 01a2 8D F1                   		mov	a, r9
 277 01a4 98 06                   		mov	[sp+6], a
 278 01a6 8D F2                   		mov	a, r10
 279 01a8 98 05                   		mov	[sp+5], a
 280 01aa 8D F3                   		mov	a, r11
 281 01ac 98 04                   		mov	[sp+4], a
 282 01ae FC 00 00 00             		call	!!%code(_LCD_pos_xy)
 283                             	.LVL4:
  52:../src/main.c **** 			LCD_print_char(aux);
 284                             		.loc 1 52 0
 285 01b2 88 0D                   		mov	a, [sp+13]
 286 01b4 98 00                   		mov	[sp], a
 287 01b6 FC 00 00 00             		call	!!%code(_LCD_print_char)
 288                             	.LVL5:
  53:../src/main.c **** 			for (temp=0;temp<500000;temp++);
 289                             		.loc 1 53 0
 290 01ba F6                      		clrw	ax
 291 01bb B8 0E                   		movw	[sp+14], ax
 292 01bd F6                      		clrw	ax
 293 01be B8 10                   		movw	[sp+16], ax
 294 01c0 A8 0E                   		movw	ax, [sp+14]
 295 01c2 B8 08                   		movw	[sp+8], ax
 296 01c4 A8 10                   		movw	ax, [sp+16]
 297 01c6 B8 0A                   		movw	[sp+10], ax
 298 01c8 88 07                   		mov	a, [sp+7]
 299 01ca 9D F0                   		mov	r8, a
 300 01cc 88 06                   		mov	a, [sp+6]
 301 01ce 9D F1                   		mov	r9, a
 302 01d0 88 05                   		mov	a, [sp+5]
 303 01d2 9D F2                   		mov	r10, a
 304 01d4 88 04                   		mov	a, [sp+4]
 305 01d6 9D F3                   		mov	r11, a
 306 01d8 A8 0A                   		movw	ax, [sp+10]
 307 01da 44 07 00                		 cmpw	ax, #7
 308 01dd A8 08                   		 movw	ax, [sp+8]
 309 01df 61 F8                   		 sknz
 310 01e1 44 1F A1                		 cmpw	ax, #41247
 311 01e4 61 F3                   		 sknh
 312 01e6 EC 22 02 00             		 br	!!.L19
 313                             	.L21:
 314                             		.loc 1 53 0 is_stmt 0 discriminator 3
 315 01ea A8 0E                   		movw	ax, [sp+14]
 316 01ec BD F0                   		movw	r8, ax
 317 01ee A8 10                   		movw	ax, [sp+16]
 318 01f0 BD F2                   		movw	r10, ax
 319 01f2 AD F0                   		movw ax, r8
 320 01f4 04 01 00                		addw ax, #1
 321 01f7 BD F4                   		movw r12, ax
 322 01f9 AD F2                   		movw ax, r10
 323 01fb 61 D8                   		sknc
 324 01fd A1                      		incw ax
 325 01fe BD F6                   		movw r14,ax
 326 0200 AD F4                   		movw	ax, r12
 327 0202 B8 0E                   		movw	[sp+14], ax
 328 0204 AD F6                   		movw	ax, r14
 329 0206 B8 10                   		movw	[sp+16], ax
 330 0208 A8 0E                   		movw	ax, [sp+14]
 331 020a BD E8                   		movw	r16, ax
 332 020c A8 10                   		movw	ax, [sp+16]
 333 020e BD EA                   		movw	r18, ax
 334 0210 AD EA                   		movw	ax, r18
 335 0212 44 07 00                		 cmpw	ax, #7
 336 0215 AD E8                   		 movw	ax, r16
 337 0217 61 F8                   		 sknz
 338 0219 44 1F A1                		 cmpw	ax, #41247
 339 021c 61 E3                   		 skh
 340 021e EC EA 01 00             		 br	!!.L21
 341                             	.L19:
  50:../src/main.c **** 			LCD_pos_xy(0,1);
 342                             		.loc 1 50 0 is_stmt 1
 343 0222 FB F8 FF                		movw	hl, sp
 344 0225 61 59 0D                		inc	[hl+13]
 345 0228 88 0D                   		mov	a, [sp+13]
 346 022a 4C 63                   		cmp	a, #99
 347 022c 61 E3                   		 skh
 348 022e EC 98 01 00             		 br	!!.L20
 349 0232 EC 50 01 00             		br	!!.L16
 350                             	.LFE1:
 352                             		.section	.text.startup,"ax",@progbits
 353                             		.global	_main
 355                             	_main:
 356                             	.LFB2:
  54:../src/main.c **** 		}
  55:../src/main.c **** 	}
  56:../src/main.c **** }
  57:../src/main.c **** 
  58:../src/main.c **** void main(void){
 357                             		.loc 1 58 0
 358                             		; start of function
 359                             		; outgoing: 2 bytes
 360 0000 20 02                   		subw	sp, #2
 361                             	.LCFI6:
  59:../src/main.c **** 	ULWOS_TASKHANDLER tk1 = ulwos_create_task(&task1);
 362                             		.loc 1 59 0
 363 0002 30 00 00                		movw	ax, #%code(_task1)
 364 0005 B8 00                   		movw	[sp], ax
 365 0007 FC 00 00 00             		call	!!%code(_ulwos_create_task)
 366                             	.LVL6:
  60:../src/main.c **** 	ULWOS_TASKHANDLER tk2 = ulwos_create_task(&task2);
 367                             		.loc 1 60 0
 368 000b 30 1C 01                		movw	ax, #%code(_task2)
 369 000e B8 00                   		movw	[sp], ax
 370 0010 FC 00 00 00             		call	!!%code(_ulwos_create_task)
 371                             	.LVL7:
  61:../src/main.c **** 	ulwos_start();
 372                             		.loc 1 61 0
 373 0014 FC 00 00 00             		call	!!%code(_ulwos_start)
 374                             	.LVL8:
 375                             	.L26:
  62:../src/main.c **** 	// the following code is never executed!!! It is here "just in case" ;)
  63:../src/main.c **** 	while (1){
  64:../src/main.c **** 	}
 376                             		.loc 1 64 0 discriminator 1
 377 0018 EC 18 00 00             		br	!!.L26
 378                             	.LFE2:
 380                             		.comm	_counter,4,2
 451                             	.Letext0:
 452                             		.file 2 "../src/iodefine.h"
 453                             		.file 3 "../src/ulwos.h"
 454                             		.file 4 "../src/lcd_8x2.h"
