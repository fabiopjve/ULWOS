   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.global	_task1
  29                             	_task1:
  30                             	.LFB0:
  31                             		.file 1 "../src/main.c"
   1:../src/main.c **** /***************************************************************/
   2:../src/main.c **** /*                                                             */
   3:../src/main.c **** /*      PROJECT NAME :  ULWOS testing                          */
   4:../src/main.c **** /*      FILE         :  main.c                                 */
   5:../src/main.c **** /*      DESCRIPTION  :  Main Program                           */
   6:../src/main.c **** /*      CPU SERIES   :  RL78 - G13                             */
   7:../src/main.c **** /*      CPU TYPE     :  R5F100LE                               */
   8:../src/main.c **** /*                                                             */
   9:../src/main.c **** /*      This file is generated by e2 studio.                   */
  10:../src/main.c **** /*                                                             */
  11:../src/main.c **** /***************************************************************/                                  
  12:../src/main.c ****                                                                                             
  13:../src/main.c ****                                                                                             
  14:../src/main.c **** /************************************************************************/
  15:../src/main.c **** /*    File Version: V1.00                                               */
  16:../src/main.c **** /*    Date Generated: 02/26/2016                                        */
  17:../src/main.c **** /************************************************************************/
  18:../src/main.c **** 
  19:../src/main.c **** #include "iodefine.h"
  20:../src/main.c **** #include "iodefine_ext.h"
  21:../src/main.c **** #include "myrl78.h"
  22:../src/main.c **** #include "interrupt_handlers.h"
  23:../src/main.c **** #include "ulwos.h"
  24:../src/main.c **** #include "lcd_8x2.h"
  25:../src/main.c **** 
  26:../src/main.c **** #define LED 	P6_bit.no3
  27:../src/main.c **** #define LED_DIR PM6_bit.no3
  28:../src/main.c **** 
  29:../src/main.c **** void __attribute__ ((noreturn)) task1(void){
  32                             		.loc 1 29 0
  33                             		; start of function
  34                             		; push 4: r16 r18
  35                             		; locals: 28 bytes
  36 0000 61 EF                   		sel	rb2
  37 0002 C1                      		push	ax ; r16
  38                             	.LCFI0:
  39 0003 C3                      		push	bc ; r18
  40                             	.LCFI1:
  41 0004 61 CF                   		sel	rb0
  42 0006 20 1C                   		subw	sp, #28
  43                             	.LCFI2:
  30:../src/main.c **** 	volatile unsigned long count;
  31:../src/main.c **** 	LED_DIR = 0;
  44                             		.loc 1 31 0
  45 0008 71 38 26 FF             		clr1	!-218.3
  46                             	.L6:
  32:../src/main.c **** 	while (1){
  33:../src/main.c **** 		LED = 0;
  47                             		.loc 1 33 0
  48 000c 71 38 06 FF             		clr1	!-250.3
  34:../src/main.c **** 		for (count=0; count<100000;count++);
  49                             		.loc 1 34 0
  50 0010 F6                      		clrw	ax
  51 0011 B8 18                   		movw	[sp+24], ax
  52 0013 F6                      		clrw	ax
  53 0014 B8 1A                   		movw	[sp+26], ax
  54 0016 A8 18                   		movw	ax, [sp+24]
  55 0018 B8 04                   		movw	[sp+4], ax
  56 001a A8 1A                   		movw	ax, [sp+26]
  57 001c B8 06                   		movw	[sp+6], ax
  58 001e A8 06                   		movw	ax, [sp+6]
  59 0020 44 01 00                		 cmpw	ax, #1
  60 0023 A8 04                   		 movw	ax, [sp+4]
  61 0025 61 F8                   		 sknz
  62 0027 44 9F 86                		 cmpw	ax, #34463
  63 002a 61 F3                   		 sknh
  64 002c EC 68 00 00             		 br	!!.L5
  65                             	.L8:
  66                             		.loc 1 34 0 is_stmt 0 discriminator 3
  67 0030 A8 18                   		movw	ax, [sp+24]
  68 0032 BD F4                   		movw	r12, ax
  69 0034 A8 1A                   		movw	ax, [sp+26]
  70 0036 BD F6                   		movw	r14, ax
  71 0038 AD F4                   		movw ax, r12
  72 003a 04 01 00                		addw ax, #1
  73 003d BD E8                   		movw r16, ax
  74 003f AD F6                   		movw ax, r14
  75 0041 61 D8                   		sknc
  76 0043 A1                      		incw ax
  77 0044 BD EA                   		movw r18,ax
  78 0046 AD E8                   		movw	ax, r16
  79 0048 B8 18                   		movw	[sp+24], ax
  80 004a AD EA                   		movw	ax, r18
  81 004c B8 1A                   		movw	[sp+26], ax
  82 004e A8 18                   		movw	ax, [sp+24]
  83 0050 BD F0                   		movw	r8, ax
  84 0052 A8 1A                   		movw	ax, [sp+26]
  85 0054 BD F2                   		movw	r10, ax
  86 0056 AD F2                   		movw	ax, r10
  87 0058 44 01 00                		 cmpw	ax, #1
  88 005b AD F0                   		 movw	ax, r8
  89 005d 61 F8                   		 sknz
  90 005f 44 9F 86                		 cmpw	ax, #34463
  91 0062 61 E3                   		 skh
  92 0064 EC 30 00 00             		 br	!!.L8
  93                             	.L5:
  35:../src/main.c **** 		LED = 1;
  94                             		.loc 1 35 0 is_stmt 1
  95 0068 71 30 06 FF             		set1	!-250.3
  36:../src/main.c **** 		for (count=0; count<100000;count++);
  96                             		.loc 1 36 0
  97 006c F6                      		clrw	ax
  98 006d B8 18                   		movw	[sp+24], ax
  99 006f F6                      		clrw	ax
 100 0070 B8 1A                   		movw	[sp+26], ax
 101 0072 A8 18                   		movw	ax, [sp+24]
 102 0074 B8 00                   		movw	[sp], ax
 103 0076 A8 1A                   		movw	ax, [sp+26]
 104 0078 B8 02                   		movw	[sp+2], ax
 105 007a A8 02                   		movw	ax, [sp+2]
 106 007c 44 01 00                		 cmpw	ax, #1
 107 007f A8 00                   		 movw	ax, [sp]
 108 0081 61 F8                   		 sknz
 109 0083 44 9F 86                		 cmpw	ax, #34463
 110 0086 61 F3                   		 sknh
 111 0088 EC 0C 00 00             		 br	!!.L6
 112 008c AD F0                   		movw	ax, r8
 113 008e B8 10                   		movw	[sp+16], ax
 114 0090 AD F2                   		movw	ax, r10
 115 0092 B8 12                   		movw	[sp+18], ax
 116 0094 AD F4                   		movw	ax, r12
 117 0096 B8 14                   		movw	[sp+20], ax
 118 0098 AD F6                   		movw	ax, r14
 119 009a B8 16                   		movw	[sp+22], ax
 120                             	.L7:
 121                             		.loc 1 36 0 is_stmt 0 discriminator 3
 122 009c A8 18                   		movw	ax, [sp+24]
 123 009e BD F4                   		movw	r12, ax
 124 00a0 A8 1A                   		movw	ax, [sp+26]
 125 00a2 BD F6                   		movw	r14, ax
 126 00a4 AD F4                   		movw ax, r12
 127 00a6 04 01 00                		addw ax, #1
 128 00a9 BD E8                   		movw r16, ax
 129 00ab AD F6                   		movw ax, r14
 130 00ad 61 D8                   		sknc
 131 00af A1                      		incw ax
 132 00b0 BD EA                   		movw r18,ax
 133 00b2 AD E8                   		movw	ax, r16
 134 00b4 B8 18                   		movw	[sp+24], ax
 135 00b6 AD EA                   		movw	ax, r18
 136 00b8 B8 1A                   		movw	[sp+26], ax
 137 00ba A8 18                   		movw	ax, [sp+24]
 138 00bc BD F0                   		movw	r8, ax
 139 00be A8 1A                   		movw	ax, [sp+26]
 140 00c0 BD F2                   		movw	r10, ax
 141 00c2 AD F2                   		movw	ax, r10
 142 00c4 44 01 00                		 cmpw	ax, #1
 143 00c7 AD F0                   		 movw	ax, r8
 144 00c9 61 F8                   		 sknz
 145 00cb 44 9F 86                		 cmpw	ax, #34463
 146 00ce 61 E3                   		 skh
 147 00d0 EC 9C 00 00             		 br	!!.L7
 148 00d4 AD F0                   		movw	ax, r8
 149 00d6 B8 08                   		movw	[sp+8], ax
 150 00d8 AD F2                   		movw	ax, r10
 151 00da B8 0A                   		movw	[sp+10], ax
 152 00dc A8 10                   		movw	ax, [sp+16]
 153 00de BD F0                   		movw	r8, ax
 154 00e0 A8 12                   		movw	ax, [sp+18]
 155 00e2 BD F2                   		movw	r10, ax
 156 00e4 AD F4                   		movw	ax, r12
 157 00e6 B8 0C                   		movw	[sp+12], ax
 158 00e8 AD F6                   		movw	ax, r14
 159 00ea B8 0E                   		movw	[sp+14], ax
 160 00ec A8 14                   		movw	ax, [sp+20]
 161 00ee BD F4                   		movw	r12, ax
 162 00f0 A8 16                   		movw	ax, [sp+22]
 163 00f2 BD F6                   		movw	r14, ax
 164 00f4 EC 0C 00 00             		br	!!.L6
 165                             	.LFE0:
 167                             		.section	.rodata
 168                             	.LC0:
 169 0000 54 65 73 74 69 6E 67 00 		.string	"Testing"
 170                             	.text
 171                             		.global	_task2
 173                             	_task2:
 174                             	.LFB1:
  37:../src/main.c **** 	}
  38:../src/main.c **** }
  39:../src/main.c **** 
  40:../src/main.c **** void __attribute__ ((noreturn)) task2(void){
 175                             		.loc 1 40 0 is_stmt 1
 176                             		; start of function
 177                             		; push 4: r16 r18
 178                             		; locals: 14 bytes
 179                             		; outgoing: 4 bytes
 180 00f8 61 EF                   		sel	rb2
 181 00fa C1                      		push	ax ; r16
 182                             	.LCFI3:
 183 00fb C3                      		push	bc ; r18
 184                             	.LCFI4:
 185 00fc 61 CF                   		sel	rb0
 186 00fe 20 12                   		subw	sp, #18
 187                             	.LCFI5:
  41:../src/main.c **** 	volatile unsigned char aux;
  42:../src/main.c **** 	volatile unsigned long temp;
  43:../src/main.c **** 	LCD_init(DISPLAY_8x5|_2LINES,DISPLAY_ON|CURSOR_OFF|CURSOR_FIXED);
 188                             		.loc 1 43 0
 189 0100 51 08                   		mov	a, #8
 190 0102 98 00                   		mov	[sp], a
 191 0104 51 04                   		mov	a, #4
 192 0106 98 02                   		mov	[sp+2], a
 193 0108 8D F0                   		mov	a, r8
 194 010a 98 07                   		mov	[sp+7], a
 195 010c 8D F1                   		mov	a, r9
 196 010e 98 06                   		mov	[sp+6], a
 197 0110 8D F2                   		mov	a, r10
 198 0112 98 05                   		mov	[sp+5], a
 199 0114 8D F3                   		mov	a, r11
 200 0116 98 04                   		mov	[sp+4], a
 201 0118 FC 00 00 00             		call	!!%code(_LCD_init)
 202                             	.LVL0:
 203 011c 88 07                   		mov	a, [sp+7]
 204 011e 9D F0                   		mov	r8, a
 205 0120 88 06                   		mov	a, [sp+6]
 206 0122 9D F1                   		mov	r9, a
 207 0124 88 05                   		mov	a, [sp+5]
 208 0126 9D F2                   		mov	r10, a
 209 0128 88 04                   		mov	a, [sp+4]
 210 012a 9D F3                   		mov	r11, a
 211                             	.L16:
  44:../src/main.c **** 	while (1){
  45:../src/main.c **** 		LCD_write_char('\f');   // apaga o display
 212                             		.loc 1 45 0
 213 012c 51 0C                   		mov	a, #12
 214 012e 98 00                   		mov	[sp], a
 215 0130 8D F0                   		mov	a, r8
 216 0132 98 07                   		mov	[sp+7], a
 217 0134 8D F1                   		mov	a, r9
 218 0136 98 06                   		mov	[sp+6], a
 219 0138 8D F2                   		mov	a, r10
 220 013a 98 05                   		mov	[sp+5], a
 221 013c 8D F3                   		mov	a, r11
 222 013e 98 04                   		mov	[sp+4], a
 223 0140 FC 00 00 00             		call	!!%code(_LCD_write_char)
 224                             	.LVL1:
  46:../src/main.c **** 		LCD_pos_xy(0,0);
 225                             		.loc 1 46 0
 226 0144 F1                      		clrb	a
 227 0145 98 00                   		mov	[sp], a
 228 0147 F1                      		clrb	a
 229 0148 98 02                   		mov	[sp+2], a
 230 014a FC 00 00 00             		call	!!%code(_LCD_pos_xy)
 231                             	.LVL2:
  47:../src/main.c **** 		LCD_write_string("Testing");
 232                             		.loc 1 47 0
 233 014e 30 00 00                		movw	ax, #.LC0
 234 0151 B8 00                   		movw	[sp], ax
 235 0153 FC 00 00 00             		call	!!%code(_LCD_write_string)
 236                             	.LVL3:
  48:../src/main.c **** 		for (aux=0;aux<100;aux++){
 237                             		.loc 1 48 0
 238 0157 F1                      		clrb	a
 239 0158 98 0D                   		mov	[sp+13], a
 240 015a 88 07                   		mov	a, [sp+7]
 241 015c 9D F0                   		mov	r8, a
 242 015e 88 06                   		mov	a, [sp+6]
 243 0160 9D F1                   		mov	r9, a
 244 0162 88 05                   		mov	a, [sp+5]
 245 0164 9D F2                   		mov	r10, a
 246 0166 88 04                   		mov	a, [sp+4]
 247 0168 9D F3                   		mov	r11, a
 248 016a 88 0D                   		mov	a, [sp+13]
 249 016c 4C 63                   		cmp	a, #99
 250 016e 61 F3                   		 sknh
 251 0170 EC 2C 01 00             		 br	!!.L16
 252                             	.L20:
  49:../src/main.c **** 			LCD_pos_xy(0,1);
 253                             		.loc 1 49 0
 254 0174 F1                      		clrb	a
 255 0175 98 00                   		mov	[sp], a
 256 0177 E1                      		oneb	a
 257 0178 98 02                   		mov	[sp+2], a
 258 017a 8D F0                   		mov	a, r8
 259 017c 98 07                   		mov	[sp+7], a
 260 017e 8D F1                   		mov	a, r9
 261 0180 98 06                   		mov	[sp+6], a
 262 0182 8D F2                   		mov	a, r10
 263 0184 98 05                   		mov	[sp+5], a
 264 0186 8D F3                   		mov	a, r11
 265 0188 98 04                   		mov	[sp+4], a
 266 018a FC 00 00 00             		call	!!%code(_LCD_pos_xy)
 267                             	.LVL4:
  50:../src/main.c **** 			LCD_print_char(aux);
 268                             		.loc 1 50 0
 269 018e 88 0D                   		mov	a, [sp+13]
 270 0190 98 00                   		mov	[sp], a
 271 0192 FC 00 00 00             		call	!!%code(_LCD_print_char)
 272                             	.LVL5:
  51:../src/main.c **** 			for (temp=0;temp<500000;temp++);
 273                             		.loc 1 51 0
 274 0196 F6                      		clrw	ax
 275 0197 B8 0E                   		movw	[sp+14], ax
 276 0199 F6                      		clrw	ax
 277 019a B8 10                   		movw	[sp+16], ax
 278 019c A8 0E                   		movw	ax, [sp+14]
 279 019e B8 08                   		movw	[sp+8], ax
 280 01a0 A8 10                   		movw	ax, [sp+16]
 281 01a2 B8 0A                   		movw	[sp+10], ax
 282 01a4 88 07                   		mov	a, [sp+7]
 283 01a6 9D F0                   		mov	r8, a
 284 01a8 88 06                   		mov	a, [sp+6]
 285 01aa 9D F1                   		mov	r9, a
 286 01ac 88 05                   		mov	a, [sp+5]
 287 01ae 9D F2                   		mov	r10, a
 288 01b0 88 04                   		mov	a, [sp+4]
 289 01b2 9D F3                   		mov	r11, a
 290 01b4 A8 0A                   		movw	ax, [sp+10]
 291 01b6 44 07 00                		 cmpw	ax, #7
 292 01b9 A8 08                   		 movw	ax, [sp+8]
 293 01bb 61 F8                   		 sknz
 294 01bd 44 1F A1                		 cmpw	ax, #41247
 295 01c0 61 F3                   		 sknh
 296 01c2 EC FE 01 00             		 br	!!.L19
 297                             	.L21:
 298                             		.loc 1 51 0 is_stmt 0 discriminator 3
 299 01c6 A8 0E                   		movw	ax, [sp+14]
 300 01c8 BD F0                   		movw	r8, ax
 301 01ca A8 10                   		movw	ax, [sp+16]
 302 01cc BD F2                   		movw	r10, ax
 303 01ce AD F0                   		movw ax, r8
 304 01d0 04 01 00                		addw ax, #1
 305 01d3 BD F4                   		movw r12, ax
 306 01d5 AD F2                   		movw ax, r10
 307 01d7 61 D8                   		sknc
 308 01d9 A1                      		incw ax
 309 01da BD F6                   		movw r14,ax
 310 01dc AD F4                   		movw	ax, r12
 311 01de B8 0E                   		movw	[sp+14], ax
 312 01e0 AD F6                   		movw	ax, r14
 313 01e2 B8 10                   		movw	[sp+16], ax
 314 01e4 A8 0E                   		movw	ax, [sp+14]
 315 01e6 BD E8                   		movw	r16, ax
 316 01e8 A8 10                   		movw	ax, [sp+16]
 317 01ea BD EA                   		movw	r18, ax
 318 01ec AD EA                   		movw	ax, r18
 319 01ee 44 07 00                		 cmpw	ax, #7
 320 01f1 AD E8                   		 movw	ax, r16
 321 01f3 61 F8                   		 sknz
 322 01f5 44 1F A1                		 cmpw	ax, #41247
 323 01f8 61 E3                   		 skh
 324 01fa EC C6 01 00             		 br	!!.L21
 325                             	.L19:
  48:../src/main.c **** 			LCD_pos_xy(0,1);
 326                             		.loc 1 48 0 is_stmt 1
 327 01fe FB F8 FF                		movw	hl, sp
 328 0201 61 59 0D                		inc	[hl+13]
 329 0204 88 0D                   		mov	a, [sp+13]
 330 0206 4C 63                   		cmp	a, #99
 331 0208 61 E3                   		 skh
 332 020a EC 74 01 00             		 br	!!.L20
 333 020e EC 2C 01 00             		br	!!.L16
 334                             	.LFE1:
 336                             		.section	.text.startup,"ax",@progbits
 337                             		.global	_main
 339                             	_main:
 340                             	.LFB2:
  52:../src/main.c **** 		}
  53:../src/main.c **** 	}
  54:../src/main.c **** }
  55:../src/main.c **** 
  56:../src/main.c **** void main(void){
 341                             		.loc 1 56 0
 342                             		; start of function
 343                             		; outgoing: 2 bytes
 344 0000 20 02                   		subw	sp, #2
 345                             	.LCFI6:
  57:../src/main.c **** 	ULWOS_TASKHANDLER tk1 = ulwos_create_task(&task1);
 346                             		.loc 1 57 0
 347 0002 30 00 00                		movw	ax, #%code(_task1)
 348 0005 B8 00                   		movw	[sp], ax
 349 0007 FC 00 00 00             		call	!!%code(_ulwos_create_task)
 350                             	.LVL6:
  58:../src/main.c **** 	ULWOS_TASKHANDLER tk2 = ulwos_create_task(&task2);
 351                             		.loc 1 58 0
 352 000b 30 F8 00                		movw	ax, #%code(_task2)
 353 000e B8 00                   		movw	[sp], ax
 354 0010 FC 00 00 00             		call	!!%code(_ulwos_create_task)
 355                             	.LVL7:
  59:../src/main.c **** 	ulwos_start();
 356                             		.loc 1 59 0
 357 0014 FC 00 00 00             		call	!!%code(_ulwos_start)
 358                             	.LVL8:
 359                             	.L26:
  60:../src/main.c **** 	// the following code is never reached!!! It is here "just in case" ;)
  61:../src/main.c **** 	while (1){
  62:../src/main.c **** 	}
 360                             		.loc 1 62 0 discriminator 1
 361 0018 EC 18 00 00             		br	!!.L26
 362                             	.LFE2:
 434                             	.Letext0:
 435                             		.file 2 "../src/iodefine.h"
 436                             		.file 3 "../src/ulwos.h"
 437                             		.file 4 "../src/lcd_8x2.h"
