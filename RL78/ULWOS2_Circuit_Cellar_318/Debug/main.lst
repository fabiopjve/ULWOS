   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.global	_task1
  29                             	_task1:
  30                             	.LFB0:
  31                             		.file 1 "../src/main.c"
   1:../src/main.c **** /***************************************************************/
   2:../src/main.c **** /*                                                             */
   3:../src/main.c **** /*      PROJECT NAME :  ULWOS testing                          */
   4:../src/main.c **** /*      FILE         :  main.c                                 */
   5:../src/main.c **** /*      DESCRIPTION  :  Main Program                           */
   6:../src/main.c **** /*      CPU SERIES   :  RL78 - G13                             */
   7:../src/main.c **** /*      CPU TYPE     :  R5F100LE                               */
   8:../src/main.c **** /*                                                             */
   9:../src/main.c **** /*      This file is generated by e2 studio.                   */
  10:../src/main.c **** /*                                                             */
  11:../src/main.c **** /***************************************************************/                                  
  12:../src/main.c ****                                                                                             
  13:../src/main.c ****                                                                                             
  14:../src/main.c **** /************************************************************************/
  15:../src/main.c **** /*    File Version: V1.00                                               */
  16:../src/main.c **** /*    Date Generated: 02/26/2016                                        */
  17:../src/main.c **** /************************************************************************/
  18:../src/main.c **** 
  19:../src/main.c **** #include "iodefine.h"
  20:../src/main.c **** #include "iodefine_ext.h"
  21:../src/main.c **** #include "myrl78.h"
  22:../src/main.c **** #include "interrupt_handlers.h"
  23:../src/main.c **** #include "ulwos.h"
  24:../src/main.c **** #include "lcd_8x2.h"
  25:../src/main.c **** 
  26:../src/main.c **** #define LED 	P6_bit.no3
  27:../src/main.c **** #define LED_DIR PM6_bit.no3
  28:../src/main.c **** 
  29:../src/main.c **** ULWOS_SEMAPHORE lcd_semaphore;
  30:../src/main.c **** ULWOS_SEMAPHORE test_semaphore;
  31:../src/main.c **** unsigned char ready=0;
  32:../src/main.c **** 
  33:../src/main.c **** void task1(void){
  32                             		.loc 1 33 0
  33                             		; start of function
  34                             		; outgoing: 2 bytes
  35 0000 20 02                   		subw	sp, #2
  36                             	.LCFI0:
  34:../src/main.c **** 	volatile unsigned long count;
  35:../src/main.c **** 	LED_DIR = 0;
  37                             		.loc 1 35 0
  38 0002 71 38 26 FF             		clr1	!-218.3
  39                             	.L2:
  40                             	.LBB2:
  36:../src/main.c **** 	while (1){
  37:../src/main.c **** 		// blinks a led at 2Hz (250ms on and 250ms off)
  38:../src/main.c **** 		LED = 0;
  41                             		.loc 1 38 0 discriminator 1
  42 0006 71 38 06 FF             		clr1	!-250.3
  39:../src/main.c **** 		ulwos_delayms(250);
  43                             		.loc 1 39 0 discriminator 1
  44 000a 30 FA 00                		movw	ax, #250
  45 000d B8 00                   		movw	[sp], ax
  46 000f FC 00 00 00             		call	!!%code(_ulwos_delayms)
  47                             	.LVL0:
  40:../src/main.c **** 		LED = 1;
  48                             		.loc 1 40 0 discriminator 1
  49 0013 71 30 06 FF             		set1	!-250.3
  41:../src/main.c **** 		ulwos_delayms(250);
  50                             		.loc 1 41 0 discriminator 1
  51 0017 30 FA 00                		movw	ax, #250
  52 001a B8 00                   		movw	[sp], ax
  53 001c FC 00 00 00             		call	!!%code(_ulwos_delayms)
  54                             	.LVL1:
  55                             	.LBE2:
  42:../src/main.c **** 	}
  56                             		.loc 1 42 0 discriminator 1
  57 0020 EC 06 00 00             		br	!!.L2
  58                             	.LFE0:
  60                             		.section	.rodata
  61                             	.LC0:
  62 0000 54 65 73 74 69 6E 67 00 		.string	"Testing"
  63                             	.LC1:
  64 0008 57 54 00                		.string	"WT"
  65                             	.text
  66                             		.global	_task2
  68                             	_task2:
  69                             	.LFB1:
  43:../src/main.c **** }
  44:../src/main.c **** 
  45:../src/main.c **** void task2(void){
  70                             		.loc 1 45 0
  71                             		; start of function
  72                             		; locals: 2 bytes
  73                             		; outgoing: 4 bytes
  74 0024 20 06                   		subw	sp, #6
  75                             	.LCFI1:
  46:../src/main.c **** 	volatile unsigned char aux;
  47:../src/main.c **** 	volatile unsigned long temp;
  48:../src/main.c **** 	ulwos_semaphore_acquire(&lcd_semaphore);
  76                             		.loc 1 48 0
  77 0026 30 00 00                		movw	ax, #_lcd_semaphore
  78 0029 B8 00                   		movw	[sp], ax
  79 002b FC 00 00 00             		call	!!%code(_ulwos_semaphore_acquire)
  80                             	.LVL2:
  49:../src/main.c **** 	LCD_init(DISPLAY_8x5|_2LINES,DISPLAY_ON|CURSOR_OFF|CURSOR_FIXED);
  81                             		.loc 1 49 0
  82 002f 51 08                   		mov	a, #8
  83 0031 98 00                   		mov	[sp], a
  84 0033 51 04                   		mov	a, #4
  85 0035 98 02                   		mov	[sp+2], a
  86 0037 FC 00 00 00             		call	!!%code(_LCD_init)
  87                             	.LVL3:
  50:../src/main.c **** 	ulwos_semaphore_release(&lcd_semaphore);
  88                             		.loc 1 50 0
  89 003b 30 00 00                		movw	ax, #_lcd_semaphore
  90 003e B8 00                   		movw	[sp], ax
  91 0040 FC 00 00 00             		call	!!%code(_ulwos_semaphore_release)
  92                             	.LVL4:
  93                             	.L9:
  51:../src/main.c **** 	while (1){
  52:../src/main.c **** 		ulwos_semaphore_acquire(&lcd_semaphore);
  94                             		.loc 1 52 0
  95 0044 30 00 00                		movw	ax, #_lcd_semaphore
  96 0047 B8 00                   		movw	[sp], ax
  97 0049 FC 00 00 00             		call	!!%code(_ulwos_semaphore_acquire)
  98                             	.LVL5:
  53:../src/main.c **** 		LCD_write_char('\f');   // clear the display
  99                             		.loc 1 53 0
 100 004d 51 0C                   		mov	a, #12
 101 004f 98 00                   		mov	[sp], a
 102 0051 FC 00 00 00             		call	!!%code(_LCD_write_char)
 103                             	.LVL6:
  54:../src/main.c **** 		LCD_pos_xy(0,0);
 104                             		.loc 1 54 0
 105 0055 F1                      		clrb	a
 106 0056 98 00                   		mov	[sp], a
 107 0058 F1                      		clrb	a
 108 0059 98 02                   		mov	[sp+2], a
 109 005b FC 00 00 00             		call	!!%code(_LCD_pos_xy)
 110                             	.LVL7:
  55:../src/main.c **** 		LCD_write_string("Testing");
 111                             		.loc 1 55 0
 112 005f 30 00 00                		movw	ax, #.LC0
 113 0062 B8 00                   		movw	[sp], ax
 114 0064 FC 00 00 00             		call	!!%code(_LCD_write_string)
 115                             	.LVL8:
  56:../src/main.c **** 		ulwos_semaphore_release(&lcd_semaphore);
 116                             		.loc 1 56 0
 117 0068 30 00 00                		movw	ax, #_lcd_semaphore
 118 006b B8 00                   		movw	[sp], ax
 119 006d FC 00 00 00             		call	!!%code(_ulwos_semaphore_release)
 120                             	.LVL9:
  57:../src/main.c **** 		// write an up counting onto the display (0 up to 99)
  58:../src/main.c **** 		for (aux=0;aux<100;aux++){
 121                             		.loc 1 58 0
 122 0071 F1                      		clrb	a
 123 0072 98 05                   		mov	[sp+5], a
 124 0074 4C 63                   		cmp	a, #99
 125 0076 61 F3                   		 sknh
 126 0078 EC B9 00 00             		 br	!!.L7
 127                             	.L10:
 128                             	.LBB3:
  59:../src/main.c **** 			ulwos_semaphore_acquire(&lcd_semaphore);
 129                             		.loc 1 59 0 discriminator 3
 130 007c 30 00 00                		movw	ax, #_lcd_semaphore
 131 007f B8 00                   		movw	[sp], ax
 132 0081 FC 00 00 00             		call	!!%code(_ulwos_semaphore_acquire)
 133                             	.LVL10:
  60:../src/main.c **** 			LCD_pos_xy(0,1);
 134                             		.loc 1 60 0 discriminator 3
 135 0085 F1                      		clrb	a
 136 0086 98 00                   		mov	[sp], a
 137 0088 E1                      		oneb	a
 138 0089 98 02                   		mov	[sp+2], a
 139 008b FC 00 00 00             		call	!!%code(_LCD_pos_xy)
 140                             	.LVL11:
  61:../src/main.c **** 			LCD_print_char(aux);
 141                             		.loc 1 61 0 discriminator 3
 142 008f 88 05                   		mov	a, [sp+5]
 143 0091 98 00                   		mov	[sp], a
 144 0093 FC 00 00 00             		call	!!%code(_LCD_print_char)
 145                             	.LVL12:
  62:../src/main.c **** 			ulwos_semaphore_release(&lcd_semaphore);
 146                             		.loc 1 62 0 discriminator 3
 147 0097 30 00 00                		movw	ax, #_lcd_semaphore
 148 009a B8 00                   		movw	[sp], ax
 149 009c FC 00 00 00             		call	!!%code(_ulwos_semaphore_release)
 150                             	.LVL13:
  63:../src/main.c **** 			ulwos_delayms(250);	// wait 250ms on each count
 151                             		.loc 1 63 0 discriminator 3
 152 00a0 30 FA 00                		movw	ax, #250
 153 00a3 B8 00                   		movw	[sp], ax
 154 00a5 FC 00 00 00             		call	!!%code(_ulwos_delayms)
 155                             	.LVL14:
 156                             	.LBE3:
  58:../src/main.c **** 			ulwos_semaphore_acquire(&lcd_semaphore);
 157                             		.loc 1 58 0 discriminator 3
 158 00a9 FB F8 FF                		movw	hl, sp
 159 00ac 61 59 05                		inc	[hl+5]
 160 00af 88 05                   		mov	a, [sp+5]
 161 00b1 4C 63                   		cmp	a, #99
 162 00b3 61 E3                   		 skh
 163 00b5 EC 7C 00 00             		 br	!!.L10
 164                             	.L7:
  64:../src/main.c **** 		}
  65:../src/main.c **** 		// now we write WT (wait) on the display until ready==true
  66:../src/main.c **** 		ulwos_semaphore_acquire(&lcd_semaphore);
 165                             		.loc 1 66 0
 166 00b9 30 00 00                		movw	ax, #_lcd_semaphore
 167 00bc B8 00                   		movw	[sp], ax
 168 00be FC 00 00 00             		call	!!%code(_ulwos_semaphore_acquire)
 169                             	.LVL15:
  67:../src/main.c **** 		LCD_pos_xy(0,1);
 170                             		.loc 1 67 0
 171 00c2 F1                      		clrb	a
 172 00c3 98 00                   		mov	[sp], a
 173 00c5 E1                      		oneb	a
 174 00c6 98 02                   		mov	[sp+2], a
 175 00c8 FC 00 00 00             		call	!!%code(_LCD_pos_xy)
 176                             	.LVL16:
  68:../src/main.c **** 		LCD_write_string("WT");
 177                             		.loc 1 68 0
 178 00cc 30 08 00                		movw	ax, #.LC1
 179 00cf B8 00                   		movw	[sp], ax
 180 00d1 FC 00 00 00             		call	!!%code(_LCD_write_string)
 181                             	.LVL17:
  69:../src/main.c **** 		ulwos_semaphore_release(&lcd_semaphore);
 182                             		.loc 1 69 0
 183 00d5 30 00 00                		movw	ax, #_lcd_semaphore
 184 00d8 B8 00                   		movw	[sp], ax
 185 00da FC 00 00 00             		call	!!%code(_ulwos_semaphore_release)
 186                             	.LVL18:
 187 00de EC F4 00 00             		br	!!.L6
 188                             	.L8:
 189                             	.LBB4:
  70:../src/main.c **** 		do {
  71:../src/main.c **** 			ulwos_semaphore_acquire(&test_semaphore);
  72:../src/main.c **** 			if (ready) {
  73:../src/main.c **** 				ready = 0;
  74:../src/main.c **** 				ulwos_semaphore_release(&test_semaphore);
  75:../src/main.c **** 				break;
  76:../src/main.c **** 			}
  77:../src/main.c **** 			ulwos_semaphore_release(&test_semaphore);
 190                             		.loc 1 77 0
 191 00e2 30 00 00                		movw	ax, #_test_semaphore
 192 00e5 B8 00                   		movw	[sp], ax
 193 00e7 FC 00 00 00             		call	!!%code(_ulwos_semaphore_release)
 194                             	.LVL19:
  78:../src/main.c **** 			ulwos_delayms(5);
 195                             		.loc 1 78 0
 196 00eb 30 05 00                		movw	ax, #5
 197 00ee B8 00                   		movw	[sp], ax
 198 00f0 FC 00 00 00             		call	!!%code(_ulwos_delayms)
 199                             	.LVL20:
 200                             	.L6:
  71:../src/main.c **** 			if (ready) {
 201                             		.loc 1 71 0
 202 00f4 30 00 00                		movw	ax, #_test_semaphore
 203 00f7 B8 00                   		movw	[sp], ax
 204 00f9 FC 00 00 00             		call	!!%code(_ulwos_semaphore_acquire)
 205                             	.LVL21:
  72:../src/main.c **** 				ready = 0;
 206                             		.loc 1 72 0
 207 00fd D5 00 00                		cmp0	!_ready
 208 0100 61 F8                   		 sknz
 209 0102 EC E2 00 00             		 br	!!.L8
  73:../src/main.c **** 				ulwos_semaphore_release(&test_semaphore);
 210                             		.loc 1 73 0
 211 0106 F5 00 00                		clrb	!_ready
  74:../src/main.c **** 				break;
 212                             		.loc 1 74 0
 213 0109 30 00 00                		movw	ax, #_test_semaphore
 214 010c B8 00                   		movw	[sp], ax
 215 010e FC 00 00 00             		call	!!%code(_ulwos_semaphore_release)
 216                             	.LVL22:
 217                             	.LBE4:
  79:../src/main.c **** 		} while (1);
  80:../src/main.c **** 	}
 218                             		.loc 1 80 0
 219 0112 EC 44 00 00             		br	!!.L9
 220                             	.LFE1:
 222                             		.global	_task3
 224                             	_task3:
 225                             	.LFB2:
  81:../src/main.c **** }
  82:../src/main.c **** 
  83:../src/main.c **** void task3(void){
 226                             		.loc 1 83 0
 227                             		; start of function
 228                             		; locals: 2 bytes
 229                             		; outgoing: 4 bytes
 230 0116 20 06                   		subw	sp, #6
 231                             	.LCFI2:
 232                             	.L13:
 233                             	.LBB5:
  84:../src/main.c **** 	volatile unsigned char aux;
  85:../src/main.c **** 	while (1){
  86:../src/main.c **** 		// write a down counting on the display (99 down to 0)
  87:../src/main.c **** 		ulwos_semaphore_acquire(&lcd_semaphore);
 234                             		.loc 1 87 0
 235 0118 30 00 00                		movw	ax, #_lcd_semaphore
 236 011b B8 00                   		movw	[sp], ax
 237 011d FC 00 00 00             		call	!!%code(_ulwos_semaphore_acquire)
 238                             	.LVL23:
  88:../src/main.c **** 		LCD_pos_xy(3,1);
 239                             		.loc 1 88 0
 240 0121 51 03                   		mov	a, #3
 241 0123 98 00                   		mov	[sp], a
 242 0125 E1                      		oneb	a
 243 0126 98 02                   		mov	[sp+2], a
 244 0128 FC 00 00 00             		call	!!%code(_LCD_pos_xy)
 245                             	.LVL24:
  89:../src/main.c **** 		LCD_print_char(aux);
 246                             		.loc 1 89 0
 247 012c 88 05                   		mov	a, [sp+5]
 248 012e 98 00                   		mov	[sp], a
 249 0130 FC 00 00 00             		call	!!%code(_LCD_print_char)
 250                             	.LVL25:
  90:../src/main.c **** 		LCD_write_char(' ');
 251                             		.loc 1 90 0
 252 0134 51 20                   		mov	a, #32
 253 0136 98 00                   		mov	[sp], a
 254 0138 FC 00 00 00             		call	!!%code(_LCD_write_char)
 255                             	.LVL26:
  91:../src/main.c **** 		ulwos_semaphore_release(&lcd_semaphore);
 256                             		.loc 1 91 0
 257 013c 30 00 00                		movw	ax, #_lcd_semaphore
 258 013f B8 00                   		movw	[sp], ax
 259 0141 FC 00 00 00             		call	!!%code(_ulwos_semaphore_release)
 260                             	.LVL27:
  92:../src/main.c **** 		ulwos_delayms(100);	// wait 100ms on each count
 261                             		.loc 1 92 0
 262 0145 30 64 00                		movw	ax, #100
 263 0148 B8 00                   		movw	[sp], ax
 264 014a FC 00 00 00             		call	!!%code(_ulwos_delayms)
 265                             	.LVL28:
  93:../src/main.c **** 		aux--;
 266                             		.loc 1 93 0
 267 014e FB F8 FF                		movw	hl, sp
 268 0151 61 69 05                		dec	[hl+5]
  94:../src/main.c **** 		if (aux>100) aux = 99;
 269                             		.loc 1 94 0
 270 0154 88 05                   		mov	a, [sp+5]
 271 0156 4C 64                   		cmp	a, #100
 272 0158 61 E3                   		 skh
 273 015a EC 18 01 00             		 br	!!.L13
 274                             		.loc 1 94 0 is_stmt 0 discriminator 1
 275 015e 51 63                   		mov	a, #99
 276 0160 98 05                   		mov	[sp+5], a
 277 0162 EC 18 01 00             		br	!!.L13
 278                             	.LBE5:
 279                             	.LFE2:
 281                             		.global	_task4
 283                             	_task4:
 284                             	.LFB3:
  95:../src/main.c **** 	}
  96:../src/main.c **** }
  97:../src/main.c **** 
  98:../src/main.c **** void task4(void){
 285                             		.loc 1 98 0 is_stmt 1
 286                             		; start of function
 287                             		; locals: 2 bytes
 288                             		; outgoing: 4 bytes
 289 0166 20 06                   		subw	sp, #6
 290                             	.LCFI3:
 291                             	.L20:
 292                             	.LBB6:
  99:../src/main.c **** 	volatile unsigned char aux;
 100:../src/main.c **** 	while (1){
 101:../src/main.c **** 		// write an up counting on the display (0 up to 100)
 102:../src/main.c **** 		for (aux=0;aux<100;aux++){
 293                             		.loc 1 102 0
 294 0168 F1                      		clrb	a
 295 0169 98 05                   		mov	[sp+5], a
 296 016b 4C 63                   		cmp	a, #99
 297 016d 61 F3                   		 sknh
 298 016f EC B9 01 00             		 br	!!.L18
 299                             	.L21:
 300                             	.LBB7:
 103:../src/main.c **** 			ulwos_semaphore_acquire(&lcd_semaphore);
 301                             		.loc 1 103 0 discriminator 3
 302 0173 30 00 00                		movw	ax, #_lcd_semaphore
 303 0176 B8 00                   		movw	[sp], ax
 304 0178 FC 00 00 00             		call	!!%code(_ulwos_semaphore_acquire)
 305                             	.LVL29:
 104:../src/main.c **** 			LCD_pos_xy(6,1);
 306                             		.loc 1 104 0 discriminator 3
 307 017c 51 06                   		mov	a, #6
 308 017e 98 00                   		mov	[sp], a
 309 0180 E1                      		oneb	a
 310 0181 98 02                   		mov	[sp+2], a
 311 0183 FC 00 00 00             		call	!!%code(_LCD_pos_xy)
 312                             	.LVL30:
 105:../src/main.c **** 			LCD_print_char(aux);
 313                             		.loc 1 105 0 discriminator 3
 314 0187 88 05                   		mov	a, [sp+5]
 315 0189 98 00                   		mov	[sp], a
 316 018b FC 00 00 00             		call	!!%code(_LCD_print_char)
 317                             	.LVL31:
 106:../src/main.c **** 			LCD_write_char(' ');
 318                             		.loc 1 106 0 discriminator 3
 319 018f 51 20                   		mov	a, #32
 320 0191 98 00                   		mov	[sp], a
 321 0193 FC 00 00 00             		call	!!%code(_LCD_write_char)
 322                             	.LVL32:
 107:../src/main.c **** 			ulwos_semaphore_release(&lcd_semaphore);
 323                             		.loc 1 107 0 discriminator 3
 324 0197 30 00 00                		movw	ax, #_lcd_semaphore
 325 019a B8 00                   		movw	[sp], ax
 326 019c FC 00 00 00             		call	!!%code(_ulwos_semaphore_release)
 327                             	.LVL33:
 108:../src/main.c **** 			ulwos_delayms(400); // wait 400ms on each count
 328                             		.loc 1 108 0 discriminator 3
 329 01a0 30 90 01                		movw	ax, #400
 330 01a3 B8 00                   		movw	[sp], ax
 331 01a5 FC 00 00 00             		call	!!%code(_ulwos_delayms)
 332                             	.LVL34:
 333                             	.LBE7:
 102:../src/main.c **** 			ulwos_semaphore_acquire(&lcd_semaphore);
 334                             		.loc 1 102 0 discriminator 3
 335 01a9 FB F8 FF                		movw	hl, sp
 336 01ac 61 59 05                		inc	[hl+5]
 337 01af 88 05                   		mov	a, [sp+5]
 338 01b1 4C 63                   		cmp	a, #99
 339 01b3 61 E3                   		 skh
 340 01b5 EC 73 01 00             		 br	!!.L21
 341                             	.L18:
 109:../src/main.c **** 		}
 110:../src/main.c **** 		// after 100 counts, set ready to true
 111:../src/main.c **** 		ulwos_semaphore_acquire(&test_semaphore);
 342                             		.loc 1 111 0
 343 01b9 30 00 00                		movw	ax, #_test_semaphore
 344 01bc B8 00                   		movw	[sp], ax
 345 01be FC 00 00 00             		call	!!%code(_ulwos_semaphore_acquire)
 346                             	.LVL35:
 112:../src/main.c **** 		ready = 1;
 347                             		.loc 1 112 0
 348 01c2 E5 00 00                		oneb	!_ready
 113:../src/main.c **** 		ulwos_semaphore_release(&test_semaphore);
 349                             		.loc 1 113 0
 350 01c5 30 00 00                		movw	ax, #_test_semaphore
 351 01c8 B8 00                   		movw	[sp], ax
 352 01ca FC 00 00 00             		call	!!%code(_ulwos_semaphore_release)
 353                             	.LVL36:
 114:../src/main.c **** 		ulwos_delayms(20);	// wait 20ms and start it again
 354                             		.loc 1 114 0
 355 01ce 30 14 00                		movw	ax, #20
 356 01d1 B8 00                   		movw	[sp], ax
 357 01d3 FC 00 00 00             		call	!!%code(_ulwos_delayms)
 358                             	.LVL37:
 359                             	.LBE6:
 115:../src/main.c **** 	}
 360                             		.loc 1 115 0
 361 01d7 EC 68 01 00             		br	!!.L20
 362                             	.LFE3:
 364                             		.section	.text.startup,"ax",@progbits
 365                             		.global	_main
 367                             	_main:
 368                             	.LFB4:
 116:../src/main.c **** }
 117:../src/main.c **** 
 118:../src/main.c **** void main(void){
 369                             		.loc 1 118 0
 370                             		; start of function
 371                             		; outgoing: 2 bytes
 372 0000 20 02                   		subw	sp, #2
 373                             	.LCFI4:
 119:../src/main.c **** 	ULWOS_TASKHANDLER tk1 = ulwos_create_task(&task1);
 374                             		.loc 1 119 0
 375 0002 30 00 00                		movw	ax, #%code(_task1)
 376 0005 B8 00                   		movw	[sp], ax
 377 0007 FC 00 00 00             		call	!!%code(_ulwos_create_task)
 378                             	.LVL38:
 120:../src/main.c **** 	ULWOS_TASKHANDLER tk2 = ulwos_create_task(&task2);
 379                             		.loc 1 120 0
 380 000b 30 24 00                		movw	ax, #%code(_task2)
 381 000e B8 00                   		movw	[sp], ax
 382 0010 FC 00 00 00             		call	!!%code(_ulwos_create_task)
 383                             	.LVL39:
 121:../src/main.c **** 	ULWOS_TASKHANDLER tk3 = ulwos_create_task(&task3);
 384                             		.loc 1 121 0
 385 0014 30 16 01                		movw	ax, #%code(_task3)
 386 0017 B8 00                   		movw	[sp], ax
 387 0019 FC 00 00 00             		call	!!%code(_ulwos_create_task)
 388                             	.LVL40:
 122:../src/main.c **** 	ULWOS_TASKHANDLER tk4 = ulwos_create_task(&task4);
 389                             		.loc 1 122 0
 390 001d 30 66 01                		movw	ax, #%code(_task4)
 391 0020 B8 00                   		movw	[sp], ax
 392 0022 FC 00 00 00             		call	!!%code(_ulwos_create_task)
 393                             	.LVL41:
 123:../src/main.c **** 	ulwos_semaphore_init(&lcd_semaphore);
 394                             		.loc 1 123 0
 395 0026 30 00 00                		movw	ax, #_lcd_semaphore
 396 0029 B8 00                   		movw	[sp], ax
 397 002b FC 00 00 00             		call	!!%code(_ulwos_semaphore_init)
 398                             	.LVL42:
 124:../src/main.c **** 	ulwos_semaphore_init(&test_semaphore);
 399                             		.loc 1 124 0
 400 002f 30 00 00                		movw	ax, #_test_semaphore
 401 0032 B8 00                   		movw	[sp], ax
 402 0034 FC 00 00 00             		call	!!%code(_ulwos_semaphore_init)
 403                             	.LVL43:
 125:../src/main.c **** 	ulwos_start();
 404                             		.loc 1 125 0
 405 0038 FC 00 00 00             		call	!!%code(_ulwos_start)
 406                             	.LVL44:
 407                             	.L24:
 126:../src/main.c **** 	// the following code is never executed!!! It is here "just in case" ;)
 127:../src/main.c **** 	while (1){
 128:../src/main.c **** 	}
 408                             		.loc 1 128 0 discriminator 1
 409 003c EC 3C 00 00             		br	!!.L24
 410                             	.LFE4:
 412                             		.global	_ready
 413                             	.bss
 416                             	_ready:
 417 0000 00                      		.zero	1
 418                             		.comm	_test_semaphore,1,1
 419                             		.comm	_lcd_semaphore,1,1
 498                             	.Letext0:
 499                             		.file 2 "../src/iodefine.h"
 500                             		.file 3 "../src/ulwos.h"
 501                             		.file 4 "../src/lcd_8x2.h"
